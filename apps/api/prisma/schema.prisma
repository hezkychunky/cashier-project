generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CASHIER
}

enum Category {
  COFFEE
  TEA
  CHOCOLATE
}

enum PaymentMethod {
  CASH
  DEBIT
}

enum PaymentStatus {
  UNPAID
  PAID
}

enum ShiftType {
  OPENING
  CLOSING
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  fullName  String
  role      Role     @default(CASHIER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  shifts    Shift[]
}

model Shift {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  shiftType ShiftType // untuk grouping sales per shiftnya
  startTime DateTime
  endTime   DateTime?
  startCash Float
  endCash   Float?
  isActive  Boolean  @default(true) 
  createdAt DateTime @default(now())

  orders    Order[]  
}

model Product {
  id          Int      @id @default(autoincrement())
  category    Category 
  name        String
  price       Float
  stock       Int
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?

  orderItems  OrderItem[]
}

model Order {
  id            Int          @id @default(autoincrement())
  shiftId       Int
  shift         Shift        @relation(fields:[shiftId], references: [id])
  totalPrice    Float
  paymentMethod PaymentMethod @default(CASH)
  paymentStatus PaymentStatus  @default(UNPAID)
  cardNumber    String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  orderItems    OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
